<!DOCTYPE html>
<html>
  <head>
    <title>Geolocation</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
      <!-- Latest compiled and minified CSS -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

        <!-- jQuery library -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-social/5.1.1/bootstrap-social.css">

        <!-- Latest compiled JavaScript -->
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
     <nav class="navbar navbar-inverse">
      <div class="container-fluid">
<!--
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">URWeb</a>
        </div>
-->
        <div class="collapse navbar-collapse" id="myNavbar">
          <ul class="nav navbar-nav">
<!--            <li class="active"><a href="#">Back</a></li>-->
              <button onclick="location.href='.'" class="btn navbar-btn">Back</button>
          </ul>
          <ul class="nav navbar-nav navbar-right">
            <li><a href="#"><span class="glyphicon glyphicon-user"></span> Username</a></li>
          </ul>
        </div>
      </div>
    </nav>
    <div id="map" style="max-height: 80%; max-weight: 90%;"></div>
      
    <div class="form form-inline">
        <label>Zoom:</label>
        <input class="form-control" id="zoom" style="max-width: 30%">
        <button class="btn btn-default" onclick="refresh()">Refresh</button>
    </div>
    <div>
      <button class="btn btn-default" onclick="getDoc()">Refresh</button>
      <label>Some text:</label>
      <label id="txtItem33">TEEER</label>
    </div>
    <div id = "testSample">
    InitialState
    </div>
    <div>
    <button class="btn btn-default" onclick="testPut()">Test PUT</button>
    </div>
    <script>
    function testPut()
    {
      console.log("Test put")
      // $.put("/gba/temp", {buf: "buff"}, function(response)
      //   {
      //     alert(response)
      //   });
      temp = {buf : 'buf'}
      $.ajax({
        type : 'put',
        url: '/gba/temp',
        data: JSON.stringify(temp),
        processData: false,
        success: function(data){alert(data)},
        failure: function(errMsg) {
        alert(errMsg);
        }
      }
      );
    }


    function appendHtml(id, el, str) {
  var div = document.getElementById(id);
  div.innerHTML = str;
}
    var origin = {lat: -34.397, lng: 150.644};
    var origin2;
    // var origin2 = new Object();
    // origin2.lat_ = origin['lat'];

    // origin2.lat = function() {
    //   return this.lat_;
    // }

    // origin2.lng_ = origin['lng'];
    
    // origin2.lng = function() {
    //   return this.lng_;
    // }
    var map, infoWindow;
    function getDoc(){
      console.log("function getDoc()");
      
      console.log(origin2);
      if (origin2)
      {
        temp = {lat: origin2.lat(), lng: origin2.lng()}
      }
      else
      {
        temp = {lat: origin.lat, lng: origin.lng}
      }
      console.log(temp)
      $.ajax({
        type : 'post',
        url: '/gba/temp',
        data: JSON.stringify(temp),
        processData: false,
        success: function(data){appendHtml("testSample", document.body, data)},
        failure: function(errMsg) {
        alert(errMsg);
        }
      }
      );
     
      // $.post('/gba/temp', temp, function(response){
      //   // document.getElementById("testSample").innerHtml = response;
      //   // console.log("data");
      //   // alert(response);
      //   appendHtml("testSample", document.body, response);
      // });
    }
      // Note: This example requires that you consent to location sharing when
      // prompted by your browser. If you see the error "The Geolocation service
      // failed.", it means you probably did not give permission for the browser to
      // locate you.
      function initMap(zoom_ = 17) {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: zoom_
        });
        infoWindow = new google.maps.InfoWindow;
      	
        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            origin.lat = pos.lat;
            origin.lng = pos.lng;
            map.addListener('dblclick', function(event) {
                addMarker(event.latLng);
            });
            
            infoWindow.setPosition(pos);
            infoWindow.setContent('Location found.');
            infoWindow.open(map);
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
        var clickHandler = new ClickEventHandler(map, origin);	
      }
      function addMarker(location) {
        var marker = new google.maps.Marker({
          position: location,
          map: map
        });
        markers.push(marker);
      }

		var ClickEventHandler = function(map, origin) {
        this.origin = origin;
        this.map = map;
        this.directionsService = new google.maps.DirectionsService;
        this.directionsDisplay = new google.maps.DirectionsRenderer;
        this.directionsDisplay.setMap(map);
        this.placesService = new google.maps.places.PlacesService(map);
        this.infowindow = new google.maps.InfoWindow;
        this.infowindowContent = document.getElementById('infowindow-content');
        this.infowindow.setContent(this.infowindowContent);

        // Listen for clicks on the map.
        this.map.addListener('click', this.handleClick.bind(this));
      };

      ClickEventHandler.prototype.handleClick = function(event) {
        console.log('You clicked on: ' + event.latLng);
        origin2 = event.latLng
        // origin2.lat = myvar.lat();
        // origin2.lng = myvar.lng();
        // If the event has a placeId, use it.
        if (event.placeId) {
          console.log('You clicked on place:' + event.placeId);

          // Calling e.stop() on the event prevents the default info window from
          // showing.
          // If you call stop here when there is no placeId you will prevent some
          // other map click event handlers from receiving the event.
          event.stop();
          this.calculateAndDisplayRoute(event.placeId);
          // this.getPlaceInformation(event.placeId);
        }
      };

      ClickEventHandler.prototype.calculateAndDisplayRoute = function(placeId) {
        var me = this;
        this.directionsService.route({
          origin: this.origin,
          destination: {placeId: placeId},
          travelMode: 'WALKING'
        }, function(response, status) {
          if (status === 'OK') {
            me.directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      };

      ClickEventHandler.prototype.getPlaceInformation = function(placeId) {
        var me = this;
        this.placesService.getDetails({placeId: placeId}, function(place, status) {
          if (status === 'OK') {
            me.infowindow.close();
            me.infowindow.setPosition(place.geometry.location);
            me.infowindowContent.children['place-icon'].src = place.icon;
            me.infowindowContent.children['place-name'].textContent = place.name;
            me.infowindowContent.children['place-id'].textContent = place.place_id;
            me.infowindowContent.children['place-address'].textContent =
                place.formatted_address;
            me.infowindow.open(me.map);
          }
        });
      };

      function refresh() {
          var integer = parseInt(document.getElementById('zoom').value); 
//          console.log(document.getElementById('zoom').value);
//          console.log(integer);
          if(!integer) {
              integer = 17;
          }
//          initMap(integer);
          map.setZoom(integer);
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }
    </script>
    <!-- <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDXYDYmpNXAo01aw71oMT6KJXoI1aTTyvg&libraries=places&callback=initMap">
    </script> -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDXYDYmpNXAo01aw71oMT6KJXoI1aTTyvg&libraries=places&callback=initMap"
        async defer></script>
  </body>
</html>